<resources>
    <string name="app_name">VoicePrint</string>

    <!-- Strings related to MainActivity-->
    <string name="scan_barcode_button">QR Scanner</string>
    <string name="no_barcode_captured">No barcode captured</string>
    <string name="barcode_error_format">"Error reading barcode: %1$s"</string>
    <string name="nextBTN">NEXT</string>
    <string name="backBTN">BACK</string>

    <!-- Dialog related -->
    <string name="OK"> <b>OK</b> </string>
    <string name="CANCEL"> Cancel </string>
    <string name="dummy">        </string>
    <string name="RETRY"> <b>Retry</b> </string>
    <string name="dialog_message"> <b color="#008000">Connected</b>! \n\n\t\t\t press OK to go to the next page. </string>
    <string name="dialog_message1"> <b color="#FF0000"> Not Connected</b>! \n\n\t\t\t check the IP address \n\t\t\t and save it
        \n\n\t\t\t please try again! </string>
    <string name="dialog_title"> Status \n </string>

    <!--VoicePrint Overview Paragraph-->
    <string name="overview_paragraph">
        VoicePrint is an Android application that allows a user to control a 3D printer using voice commands.
        This app will use Android voice recognition for voice transcription.
        It will also store an upload GCODE files from Firebase to OctoPrint storage.
        Finally, it will send commands to the OctoPrint API, and OctoPrint will control a 3D printer while it creates an object.\n\n
        To use VoicePrint, a user must have a 3D printer with a connected OctoPi device running OctoPrint.
        OctoPi is a Raspberry Pi image, and OctoPrint is a program that runs on it. OctoPrint provides both
        web and API access to the 3D printer. VoicePrint will access the Android device′s microphone, and
        the app will use it to record voice commands. VoicePrint will convert these commands into text using
        the Android operating system′s built-in voice recognition system.\n\n
    </string>
    <string name="textview_scan_api"><p>\tTap "QR SCANNER" to scan QR code.\n\n
        (Hint: Go to OctoPrint -> click setting icon -> click API) </p> </string>
    <string name="textview_ip"><p>\tEnter the IP address below that OctoPrint is assigned.\n\n
        (Hint: see in the URL bar of OctoPrint)</p></string>

    <!--VoicePrint Help Button Paragraph-->
    <string name="help_info">\n\n
        1.	To get the API key, open the app and tap “QR Scanner.” Tap “Save API key.”
        Type in the IP address of your printer displayed in the address bar of the OctoPrint browser.
        Tap “Save IP.” Tap “Connect.” Tap “OK.” \n\n
        2.	On the Upload File Screen, tap on “EXISTING FILES.” The OctoPrint Storage Screen will be displayed.
        It has a list of files that are on OctoPrint Server. \n\n\tTo select a file, \n\t\t\t(1) tap on the file, \n\t\t\t(2) say the
        number of the file, or \n\t\t\t(3) speak any word in the filename. \n\n
        3.	The Printing Activity Screen will be displayed. \n\n\tTo print the selected file, \n\t\t\t(1) tap “PRINT” or \n\t\t\t(2) say,
        “PRINT.” \n\n\tTo stop the print job, \n\t\t\t(1) tap “STOP” or \n\t\t\t(2) say “STOP.” \n\n
        4.	To access the MoveHead Activity, tap “next” on the Upload File Screen until the Move Printer Arm Screen is displayed. \n\n
        5.	On the Move Print Arm Screen, tap the left/right/front/back/up/down button to move the print head left/right/front/back/up/down.
        Or, say “move left,” “move right,” “move front,” “move back,” “move up,” or “move down” to move the print head in the specified direction.
        To return the print head to its original position, tap the home button or say “home.” \n\n

    </string>


    <!-- Strings related to barcode scanner -->
    <string name="ok">OK</string>
    <string name="permission_camera_rationale">Access to the camera is needed for detection</string>
    <string name="no_camera_permission">This application cannot run because it does not have the camera permission.  The application will now exit.</string>
    <string name="low_storage_error">Face detector dependencies cannot be downloaded due to low device storage</string>
    <string name="appwidget_text">EXAMPLE</string>
    <string name="add_widget">Add widget</string>
    <string name="ip_address">IP address</string>
    <string name="save_key">Save API Key</string>
    <string name="save_ip">Save IP</string>
    <string name="connect">CONNECT</string>
</resources>
